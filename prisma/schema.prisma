generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  username      String?   @unique
  bio           String?   @db.Text
  creatorProfile Boolean  @default(false)
  stripeCustomerId String?
  stripeAccountId String?
  
  accounts      Account[]
  sessions      Session[]
  donations     Donation[] @relation("ReceivedDonations")
  sentDonations Donation[] @relation("SentDonations")
  posts         Post[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String   @db.Text
  image     String?
  published Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId  String
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
}

model Donation {
  id          String   @id @default(cuid())
  amount      Float
  message     String?  @db.Text
  createdAt   DateTime @default(now())
  donorId     String
  creatorId   String
  
  paymentIntentId String?
  status      String   @default("pending")
  
  donor       User     @relation("SentDonations", fields: [donorId], references: [id])
  creator     User     @relation("ReceivedDonations", fields: [creatorId], references: [id])
}

